server {
  listen 80;

  location / {
    root   /usr/share/nginx/html;
    index  index.html index.htm;
    # 이 부분이 핵심: 요청된 경로에 파일이 없으면, index.html을 대신 반환
    try_files $uri $uri/ /index.html;
  }

  # /api/로 시작하는 모든 요청은 백엔드 서버(backend:8080)로 전달하라는 규칙 (Proxy)
  location /api/ {
    proxy_pass http://backend:8080/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Swagger UI
  location /swagger-ui {
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
  }

  # OpenAPI 문서
  location /v3/api-docs {
    proxy_pass http://backend:8080;
    proxy_set_header Host $host;
  }

  # WebSocket 경로
  location /ws {
    # 기존 /api/ 경로와 동일하게 backend:8080을 사용합니다.
    proxy_pass http://backend:8080; 
    
    # --- WebSocket 프로토콜 전환을 위한 필수 헤더 (기존 설정 유지) ---
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection "upgrade";
    proxy_set_header Host $host;
    
    # --- ⭐️ CORS Preflight(OPTIONS) 요청 처리를 위한 설정 (이 부분 추가) ---
    # React 개발 서버(localhost:3000)를 허용
    add_header 'Access-Control-Allow-Origin' 'http://localhost:3000' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Preflight 요청에 대한 응답
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Max-Age' 1728000;
        return 204;
    }
    # ----------------------------------------------------------------------
  }

}