services:
  db:
    image: mysql:8.0
    ports:
      - "3307:3306"
    container_name: shop-mysql-db-dev
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: shop
      TZ: Asia/Seoul
    volumes:
      - db-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      target: builder # ⭐️ 수정된 부분
    container_name: shop-backend-app-dev
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/shop?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
      APP_JWT_SECRET: ${APP_JWT_SECRET}
      CLOUDINARY_CLOUD_NAME: ${CLOUDINARY_CLOUD_NAME}
      CLOUDINARY_API_KEY: ${CLOUDINARY_API_KEY}
      CLOUDINARY_API_SECRET: ${CLOUDINARY_API_SECRET}
    ports:
      - "8080:8080"
      - "5005:5005"
    volumes:
      - ./backend:/app
    entrypoint: mvn spring-boot:run -Dspring-boot.run.jvmArguments=-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: shop-frontend-web-dev
    restart: always
    depends_on:
      backend:
        condition: service_healthy
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: ["npm", "start"]
    stdin_open: true
    tty: true

  nginx:
    image: nginx:stable-alpine
    container_name: shop-nginx-proxy
    ports:
      - "80:80"
    volumes:
      # ⭐️ 이 경로를 ./nginx.dev.conf 로 수정합니다.
      - ./frontend/nginx.dev.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    restart: always

volumes:
  db-data: